{"componentChunkName":"component---src-templates-blog-post-js","path":"/conhecendo-react-native/","result":{"data":{"site":{"siteMetadata":{"title":"Kássio Luz - Blog"}},"markdownRemark":{"id":"c96ebd20-ca84-5444-80a3-86a1b9a324bd","excerpt":"Conhecendo o React-Native Lista de Abreviaturas e Siglas Sigla Nome RN React-Native JS JavaScript ES6 ECMAScript 6 UI User Interface JSX JavaScript Syntax…","html":"<h2>Conhecendo o React-Native</h2>\n<h6>Lista de Abreviaturas e Siglas</h6>\n<table>\n<thead>\n<tr>\n<th>Sigla</th>\n<th align=\"center\">Nome</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>RN</td>\n<td align=\"center\">React-Native</td>\n</tr>\n<tr>\n<td>JS</td>\n<td align=\"center\">JavaScript</td>\n</tr>\n<tr>\n<td>ES6</td>\n<td align=\"center\">ECMAScript 6</td>\n</tr>\n<tr>\n<td>UI</td>\n<td align=\"center\">User Interface</td>\n</tr>\n<tr>\n<td>JSX</td>\n<td align=\"center\"><strong>J</strong>avaScript <strong>S</strong>yntax e<strong>X</strong>tension</td>\n</tr>\n</tbody>\n</table>\n<h4>O que é o React-Native:question:</h4>\n<p>o <strong>RN</strong> é uma biblioteca baseada no já conhecido <a href=\"https://reactjs.org/\">React</a>, e permite que você desenvolva aplicativos para as plataformas <strong>Android</strong> e <strong>IOS</strong> utilizando apenas <strong>JavaScript</strong>.</p>\n<p>Para desenvolvedores com conhecimento em desenvolvimento web (HTML, CSS, JS) a curva de aprendizado é bem pequena, é bom também que você esteja familiarizado com ES6, caso não esteja assista esse curso gratuito da <a href=\"https://rocketseat.com.br/starter/curso-gratuito-javascript-es6\">RocketSeat</a>, lá você também vai encontrar um <a href=\"https://rocketseat.com.br/starter/curso-gratuito-react-native\">curso de RN gratuito</a> que é muito bom.</p>\n<h4>JSX</h4>\n<p>È uma sintaxe parecida com XML que permite que você escreva os componentes da UI. É possível fazer uma correlação entre alguns elementos do JSX com tags do HTML</p>\n<p>Exemplo:</p>\n<table>\n<thead>\n<tr>\n<th>HTML</th>\n<th align=\"center\">JSX</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>div</td>\n<td align=\"center\">View</td>\n</tr>\n<tr>\n<td>p</td>\n<td align=\"center\">Text</td>\n</tr>\n<tr>\n<td>img</td>\n<td align=\"center\">Image</td>\n</tr>\n</tbody>\n</table>\n<p>para saber mais sobre JSX acesse a <a href=\"https://reactjs.org/docs/introducing-jsx.html\">documentação oficial </a></p>\n<h4>Componentes</h4>\n<p>No RN tudo é componente e isso permite um reuso muito grande dentro da aplicação. Os componentes podem ser de dois tipos <strong>Stateful</strong> e <strong>Stateless</strong> uma explicação sobre cada tipo fica para um próximo post, mas uma explicação rápida é que um gerencia o próprio estado e outro é estático.</p>\n<p>Exemplo:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> View<span class=\"token punctuation\">,</span> Text <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-native\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>Hello React<span class=\"token operator\">-</span>Native<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>State</h4>\n<p>Como a própria <a href=\"https://facebook.github.io/react-native/docs/state\">documentação</a> diz é um tipo de dado que controla o componente. O state é mútavel e cada componente pode ter o seu próprio estado.</p>\n<p>Exemplo:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> View<span class=\"token punctuation\">,</span> Text <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-native\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">\"My-Name\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>Hello <span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Como visto no exemplo para acessar um dado do state você utiliza a sintaxe:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">;</span></code></pre></div>\n<p>para alterar o valor do seu state, faça dessa forma</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> name<span class=\"token operator\">:</span> <span class=\"token string\">\"novo valor\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>É possível alterar o state de um componente a partir de outro? sim, é possível mais não é indicado, se você deseja ter um state que possa ser acessado por toda a aplicação você deve utilizar <strong>Redux</strong>, <strong>MobX</strong> ou um similar.</p>\n<h3>Props</h3>\n<p>O Props é outro tipo de dado com o qual você pode controlar o componente, mas diferente do state, o prop é definido por um componente pai e passado para um filho, o filho não pode alterar diretamente o valor do props.</p>\n<p>Exemplo:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span><span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span>\n    View<span class=\"token punctuation\">,</span>\n    Text<span class=\"token punctuation\">,</span>\n    TouchableOpacity<span class=\"token punctuation\">,</span>\n    TextInput\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-native'</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">MyComponent</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span><span class=\"token punctuation\">{</span>\n\n    state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n      name<span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span>View<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>TextInput\n            placeholder<span class=\"token operator\">=</span><span class=\"token string\">\"Informe seu nome!\"</span>\n            value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span>\n            onChangeText<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">text</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n              <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">:</span> text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token punctuation\">{</span><span class=\"token comment\">/* componente filho */</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">&lt;</span>Button\n            name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">}</span> <span class=\"token punctuation\">{</span><span class=\"token comment\">/*props enviada ao filho*/</span><span class=\"token punctuation\">}</span>\n          <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>View<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n\n\n  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Button</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">name</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>TouchableOpacity\n      onPress<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">Olá </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>name<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Text<span class=\"token operator\">></span>Clique aqui<span class=\"token operator\">!</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Text<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>TouchableOpacity<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h4>Conclusão</h4>\n<p>Bom a partir do que foi apresentado neste texto você já pode prosseguir nos seus estudos sobre o React-Native, aconselho que você leia a <a href=\"https://facebook.github.io/react-native/\">documentação oficial</a> e pratique bastante, pois isso é só a ponta do iceberg :laughing:. Como complemento deste post estarei escrevendo um tutorial onde faremos um app simples usando os conceitos aqui estudados, então até a próxima :sunglasses:.</p>","frontmatter":{"title":"Conhecendo o React-Native","date":"April 02, 2019","description":"Vamos conhecer o React-Native,essa biblioteca ques está sendo utilizada para desenvolvimento multiplataforma e é baseado no já conhecido React..."}}},"pageContext":{"slug":"/conhecendo-react-native/","previous":null,"next":{"fields":{"slug":"/primeiro-app-com-react-native/"},"frontmatter":{"title":"Primeiro app com React-Native"}}}}}